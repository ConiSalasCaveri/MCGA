@using PagedList.Mvc;
@model PagedList.IPagedList<MCGA.Entities.Turno>

@{
    ViewBag.Title = "List";
}

<h2>Turnos</h2>
<h4>Busque turnos por médico o por fecha del mismo.</h4>

@using (Html.BeginForm("Index", "Turno", FormMethod.Get))
{
    <p>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control text-box single-line", autocomplete = "off", placeholder = "Ingrese el medico o fecha del turno", style = "width:350px; display: inline-block;" })
        <input type="submit" value="Buscar" class="btn btn-info" />
    </p>
}

<table class="table table-condensed table-striped">
    <tr>
        <th>
            @Html.Raw("Afiliado")
        </th>
        <th>
            @Html.Raw("Fecha")
        </th>
        <th>
            @Html.Raw("Hora")
        </th>
        <th>
            @Html.Raw("Especialidad")
        </th>
        <th>
            @Html.Raw("Medico")
        </th>
        <th>
            @Html.Raw("Observaciones")
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.createdon)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.createdby)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.changedon)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.changedby)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.deletedon)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.deletedby)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isdeleted)
            </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Afiliado.Nombre)
                @Html.DisplayFor(modelItem => item.Afiliado.Apellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hora)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EspecialidadesProfesional.Especialidad.descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EspecialidadesProfesional.Profesional.Nombre)
                @Html.DisplayFor(modelItem => item.EspecialidadesProfesional.Profesional.Apellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Observaciones)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.createdon)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.createdby)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.changedon)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.changedby)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.deletedon)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.deletedby)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.isdeleted)
                </td>*@
            <td>
                <div class="dropdown">
                    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Imprimir turno
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                        <li>@Html.ActionLink("Generar PDF", "GeneratePdf", new { id = item.Id })</li>
                    </ul>
                </div>
            </td>
        </tr>
    }

</table>
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<ul>
@*@Html.ActionLink("some text", "Index", "Turno", new { @class = "btn btn-primary" })*@

</ul>